echo 目前有普通版和精简版可以安装，建议储存空间较小的机型安装精简版本。
echo 若有USB或者自带大容量空间推荐普通版，建议USB机型磁盘格式化为ext4。
echo 1.普通版[github]'   '2.精简版[github]
echo 3.普通版[alist]'    '4.精简版[alist]
echo 5.普通版[jsdelivr]' '6.精简版[jsdelivr]
read -p "选择您要安装的版本(以上版本仅下载源不同)： > " num
function alistgetfile
{
    echo 准备下载（$num）...
    down_json=`curl "$1" -ks`
    loca_file_name=`echo "$down_json" | jsonfilter -e "@.data.name"`
    loca_file_size=`echo "$down_json" | jsonfilter -e "@.data.size"`
    message=`echo "$down_json" | jsonfilter -e "@['message']"`
    #检查文件信息
    if [ -n "$loca_file_name" ]; then
        #alist直连下载文件
        file_url=`echo "$down_json" | jsonfilter -e "@.data.raw_url"`
        curl -ks -o /tmp/xxx_install $file_url >/dev/null 2>&1 &
        checkfile $loca_file_size
    else
        echo 下载出错 $message
        exit
    fi
}

function githubgetfile
{
    echo 准备下载（$num）...
    down_json=`curl "$1" -ks`
    loca_file_name=`echo "$down_json" | jsonfilter -e "@['name']"`
    loca_file_size=`echo "$down_json" | jsonfilter -e "@['size']"`
    message=`echo "$down_json" | jsonfilter -e "@['message']"`
    #检查文件信息
    if [ -n "$loca_file_name" ]; then
        #github直连下载文件
        file_url=`echo "$down_json" | jsonfilter -e "@['git_url']"`
        curl -ks -o /tmp/xxx_install $file_url >/dev/null 2>&1 &
        checkfile $((loca_file_size*1000/725))
        xxx_install_json=$(cat /tmp/xxx_install)
        echo $xxx_install_json | jsonfilter -e "@['content']" | base64 -d > /tmp/xxx_install
    else
        echo 下载出错 $message
        exit
    fi
}

function jsdelivrgetfile
{
        #jsdelivr直连下载文件
        file_url=$1
        curl -ks -o /tmp/xxx_install $file_url >/dev/null 2>&1 &
        checkfile 19999999
}

function checkfile
{
    while [ ! -f '/tmp/xxx_install' ]
    do
        sleep 1
    done
    filesize=$1
    downfilesize="$(($(du -k /tmp/xxx_install | awk '{print $1}')*1024))"
    in=0
    inf=0
    echo '(0%)''--------------------------------------------------''(100%)'
    echo -n '(0%)'
    while true
    do
        downfilesize="$(($(du -k /tmp/xxx_install | awk '{print $1}')*1024))"
        in=$((downfilesize * 50 / filesize))
        if [ $in -gt $inf ]; then
            in=$((in-inf))
            for i in $(seq $in -1 1)
            do
                echo -n '-'
                inf=$((inf+1))
            done
        fi
        [ $in = 50 ] && break
        if [ ! -n "$(ps | grep 'curl -ks -o /tmp/xxx_install' | grep -v grep)" ]; then
            in=$((50-inf))
            for i in $(seq $in -1 1)
            do
                echo -n '-'
                inf=$((inf+1))
            done
            break
        fi
        sleep 1
    done
    echo '(100%)'
    echo "下载完成（$num）..."
}
rm -rf /tmp/xxx_install
if [ "$num" = 1 ]; then
    #github服务器
    githubgetfile 'https://api.github.com/repos/V2023H/xxx_box/contents/xxx_box/xxx_install?ref=main'
elif [ "$num" = 2 ]; then
    #github服务器
    githubgetfile 'https://api.github.com/repos/V2023H/xxx_box/contents/xxx_box/xxx_install_mini?ref=main'
elif [ "$num" = 3 ]; then
    #alist服务器
    alistgetfile 'http://v2024h.mom:30007/api/fs/get?password=&path=/%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%AB/xxx_install'
elif [ "$num" = 4 ]; then
    #alist服务器
    alistgetfile 'http://v2024h.mom:30007/api/fs/get?password=&path=/%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%AB/xxx_install_mini'
elif [ "$num" = 5 ]; then
    #jsdelivr服务器
    jsdelivrgetfile 'https://cdn.jsdelivr.net/gh/V2023H/xxx_box@main/xxx_box/xxx_install'
elif [ "$num" = 6 ]; then
    #jsdelivr服务器
    jsdelivrgetfile 'https://cdn.jsdelivr.net/gh/V2023H/xxx_box@main/xxx_box/xxx_install_mini'
else
    echo 取消安装
    exit
fi
tar -Jxf /tmp/xxx_install tmp/xxxbox_mtd/install.sh -C /tmp && mv /tmp/tmp/xxxbox_mtd/install.sh /tmp/install.sh && sh /tmp/install.sh
